#!/usr/bin/make -f
# -*- makefile -*-

export DH_VIRTUALENV_INSTALL_ROOT=/opt
export PYBUILD_NAME=wlanpi-rxg-agent

PACKAGE=$(shell dh_listpackages)
VERSION=$(shell parsechangelog | grep ^Version: | sed -re 's/[^0-9]+([^-]+).*/\1/')

SNAKE=/usr/bin/python3

DH_VENV_DIR=debian/$(PACKAGE)$(DH_VIRTUALENV_INSTALL_ROOT)/$(PACKAGE)

DBUS_PYTHON_SPEC=$(shell grep dbus-python== requirements.txt)
DBUS_VERSION=$(shell grep dbus-python== requirements.txt | cut -d '=' -f3)
#SYSTEMD_PYTHON_SPEC=$(shell grep systemd-python== requirements.txt)
#SYSTEMD_VERSION=$(shell grep systemd-python== requirements.txt | cut -d '=' -f3)
PKG_PREFIX=debian/wlanpi-rxg-agent
SDIST_DIR=debian/$(PACKAGE)-$(VERSION)

%:
	dh $@ --with python-virtualenv --buildsystem=pybuild

.PHONY: override_dh_virtualenv override_dh_installexamples

# we don't really want to strip the symbols from our object files.
override_dh_strip:

# we don't really want dwz to do anything to our files.
override_dh_dwz:

override_dh_installexamples:
	dh_installexamples -A -X__pycache__

override_dh_virtualenv:
	dh_virtualenv \
		--install-suffix "wlanpi-rxg-agent" \
		--builtin-venv \
		--python ${SNAKE} \
		--upgrade-pip-to=25.1.1 \
		--preinstall="setuptools==75.2.0" \

		--preinstall="wheel==0.44.0"
		--preinstall="mock" \
		--extra-pip-arg "--no-cache-dir" \
		--extra-pip-arg "--no-compile" \
		--extras="all,systemd,test"

	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip cache purge --verbose
	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip download $(DBUS_PYTHON_SPEC) --no-binary dbus-python ${DBUS_PYTHON_SPEC} --verbose
	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip install dbus-python-$(DBUS_VERSION).tar.gz --verbose
	#$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip download $(SYSTEMD_PYTHON_SPEC) --no-binary systemd-python ${SYSTEMD_PYTHON_SPEC} --verbose
	#$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip install systemd-python-$(SYSTEMD_VERSION).tar.gz --verbose

	@echo "BYTECODE CLEANUP:"
	find $(DH_VENV_DIR)/lib -type d -name "__pycache__" -exec rm -rf {} + -print 2>/dev/null || true
	find $(DH_VENV_DIR)/lib -name "*.pyc" -delete -print
	find $(DH_VENV_DIR)/lib -name "*.pyo" -delete -print

	@echo "BEFORE BUILD TOOLS CLEANUP:"
	du -sh $(DH_VENV_DIR)/bin/pip* || echo "No pip binaries found"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/pip || echo "No pip package found"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/setuptools || echo "No setuptools found"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/wheel || echo "No wheel found"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/_distutils_hack || echo "No _distutils_hack found"
	du -sh $(DH_VENV_DIR) || echo "Cannot determine total venv size"

	rm -rfv $(DH_VENV_DIR)/bin/pip*
	rm -rfv $(DH_VENV_DIR)/bin/easy_install*
	rm -rfv $(DH_VENV_DIR)/bin/wheel
	rm -rfv $(DH_VENV_DIR)/lib/python*/site-packages/pip
	rm -rfv $(DH_VENV_DIR)/lib/python*/site-packages/setuptools
	rm -rfv $(DH_VENV_DIR)/lib/python*/site-packages/wheel
	rm -rfv $(DH_VENV_DIR)/lib/python*/site-packages/_distutils_hack
	rm -rfv $(DH_VENV_DIR)/lib/python*/site-packages/*.dist-info

	@echo "AFTER BUILD TOOLS CLEANUP:"
	du -sh $(DH_VENV_DIR)/bin/pip* 2>/dev/null || echo "No pip binaries found - good!"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/pip 2>/dev/null || echo "No pip package found - good!"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/setuptools 2>/dev/null || echo "No setuptools found - good!"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/wheel 2>/dev/null || echo "No wheel found - good!"
	du -sh $(DH_VENV_DIR)/lib/python*/site-packages/_distutils_hack 2>/dev/null || echo "No _distutils_hack found - good!"
	du -sh $(DH_VENV_DIR) || echo "Cannot determine total venv size"