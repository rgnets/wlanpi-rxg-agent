name: Deploy to Packagecloud

on:
  # Allow manual runs of workflow from Actions tab
  workflow_dispatch:
  
  push:
    branches:
      - main
      - master
      - dev
    paths:
      - 'debian/changelog'

jobs:
  check_version:
    name: Check py & deb pkg versions match
    uses: rgnets/wlanpi-gh-workflows/.github/workflows/check-py-deb-pkg-versions-match.yml@main
    with:
      python_version_file_path: 'wlanpi_rxg_agent/__version__.py'
  format:
    name: Get formatted version for filename
    uses: rgnets/wlanpi-gh-workflows/.github/workflows/get-formatted-version-string.yml@main


  build_baresip:
    name: build baresip
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout baresip
        uses: actions/checkout@v4
        with:
          repository: rgnets/baresip
          ref: rgnets-custom



      - name: fix flaky azure mirrors
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo sed -i 's/azure\./de\./' /etc/apt/sources.list

      - name: install packages
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update && sudo apt-get install -y \
                              libasound2-dev \
                              libavcodec-dev \
                              libavdevice-dev \
                              libavformat-dev \
                              libcodec2-dev \
                              libfdk-aac-dev \
                              libglib2.0-dev \
                              libgstreamer1.0-dev \
                              libgtk-3-dev \
                              libjack-jackd2-dev \
                              libmosquitto-dev \
                              libmpg123-dev \
                              libopencore-amrnb-dev \
                              libopencore-amrwb-dev \
                              libopus-dev \
                              libpulse-dev \
                              libsndfile1-dev \
                              libspandsp-dev \
                              libssl-dev \
                              libvpx-dev \
                              libx11-dev \
                              libwebrtc-audio-processing-dev

      - uses: sreimers/pr-dependency-action@v1
        with:
          name: re
          repo: https://github.com/baresip/re
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: make re
        run: |
          cmake -S re -B re/build
          cmake --build re/build -j
          mv re ../.

      - name: ldconfig
        if: ${{ runner.os == 'Linux' }}
        run: sudo ldconfig


      - name: Build Baresip
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DAPP_MODULES_DIR=./modules -DAPP_MODULES="rgrtcpsummary"
          cmake --build build -j

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: baresip_artifact
          path: build
          

  sbuild_deploy:
    needs:
      - format
      - check_version
      - build_baresip

    env:
      PKG_NAME: wlanpi-rxg-agent
      PKG_VERSION: ${{ needs.format.outputs.version }}

    name: sbuild deploy pkg
    runs-on: ubuntu-24.04-arm
    environment: PACKAGECLOUD
    strategy:
      fail-fast: false
      matrix:
        distro: [ bullseye,bookworm ]
        arch: [ arm64 ]
    steps:
      - name: Check if inputs all exist and are not empty
        run: |
          if [ -z "${{ env.PKG_NAME }}" ]; then
            echo "Error: pkg string is empty"
            exit 1
          else:
            echo "pkg is "${{ env.PKG_NAME }}"
          fi
          if [ -z "${{ env.PKG_VERSION }}" ]; then
            echo "Error: version string is empty"
            exit 1
          else:
            echo "Version is "${{ env.PKG_VERSION }}"
          fi
      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y%m%dt%H%M%S')" >> $GITHUB_ENV
      - name: Set package filename
        run: |
          echo "filename=${{ env.PKG_NAME }}_${{ env.PKG_VERSION }}~gha${{ env.date }}+${{ matrix.arch }}_${{ matrix.distro }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download baresip artifact
        uses: actions/download-artifact@v4
        with:
          name: baresip_artifact
          path: ./wlanpi_rxg_agent/bin/baresip

      - name: sbuild deb pkg for ${{ matrix.distro }}+${{ matrix.arch }}
        uses: wlan-pi/sbuild-debian-package@main
        id: build-debian-package
        with:
          distro: ${{ matrix.distro }}
          arch: ${{ matrix.arch }}
      - name: Archive artifacts and upload to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.filename }}
          path: ${{ steps.build-debian-package.outputs.deb-package }}
      - name: Upload armhf pkg to debian/${{ matrix.distro }}
        if: ${{ matrix.arch == 'armhf' }}
        uses: danielmundi/upload-packagecloud@main
        with:
          package-name: ${{ steps.build-debian-package.outputs.deb-package }}
          packagecloud-username: "${{ vars.PACKAGECLOUD_USER || 'wlanpi' }}"
          packagecloud-repo: "${{ vars.PACKAGECLOUD_REPO || 'dev' }}"
          packagecloud-distrib: debian/${{ matrix.distro }}
          packagecloud-token: ${{ secrets.PACKAGECLOUD_TOKEN }}
      - name: Upload arm64 pkg to debian/${{ matrix.distro }}
        if: ${{ matrix.arch == 'arm64' }}
        uses: danielmundi/upload-packagecloud@main
        with:
          package-name: ${{ steps.build-debian-package.outputs.deb-package }}
          packagecloud-username: "${{ vars.PACKAGECLOUD_USER || 'wlanpi' }}"
          packagecloud-repo: "${{ vars.PACKAGECLOUD_REPO || 'dev' }}"
          packagecloud-distrib: debian/${{ matrix.distro }}
          packagecloud-token: ${{ secrets.PACKAGECLOUD_TOKEN }}




#
#  sbuild:
#    name: sbuild ${{ matrix.distro }}+${{ matrix.arch }}
#
#    runs-on: "${{ vars.RUNS_ON || 'ubuntu-22.04' }}"
#
#    strategy:
#      fail-fast: false
#      matrix:
#        distro: [bullseye]
#        arch: [arm64]
#        # arch: [armhf,arm64]
#
#    environment: PACKAGECLOUD
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: sbuild for ${{ matrix.distro }} ${{ matrix.arch }}
#        uses: wlan-pi/sbuild-debian-package@main
#        id: build-debian-package
#        with:
#          distro: ${{ matrix.distro }}
#          arch: ${{ matrix.arch }}
#
#      - name: Archive artifacts and upload to GitHub
#        uses: actions/upload-artifact@v4
#        with:
#          name: wlanpi-rxg-agent-${{ matrix.distro }}-${{ matrix.arch }}
#          path: ${{ steps.build-debian-package.outputs.deb-package }}
#
#      - name: Upload armhf package to raspbian/${{ matrix.distro }}
#        if: matrix.arch == 'armhf'
#        uses: danielmundi/upload-packagecloud@main
#        with:
#          package-name: ${{ steps.build-debian-package.outputs.deb-package }}
#          packagecloud-username: "${{ vars.PACKAGECLOUD_USER || 'wlanpi' }}"
#          packagecloud-repo: "${{ vars.PACKAGECLOUD_REPO || 'dev' }}"
#          packagecloud-distrib: raspbian/${{ matrix.distro }}
#          packagecloud-token: ${{ secrets.PACKAGECLOUD_TOKEN }}
#
#      - name: Upload arm64 package to debian/${{ matrix.distro }}
#        if: matrix.arch == 'arm64'
#        uses: danielmundi/upload-packagecloud@main
#        with:
#          package-name: ${{ steps.build-debian-package.outputs.deb-package }}
#          packagecloud-username: "${{ vars.PACKAGECLOUD_USER || 'wlanpi' }}"
#          packagecloud-repo: "${{ vars.PACKAGECLOUD_REPO || 'dev' }}"
#          packagecloud-distrib: debian/${{ matrix.distro }}
#          packagecloud-token: ${{ secrets.PACKAGECLOUD_TOKEN }}
